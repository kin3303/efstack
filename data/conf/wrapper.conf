#encoding=UTF-8
#********************************************************************
# Wrapper Properties
#********************************************************************
#
# This is a configuration file for the Java Service Wrapper from
# Tanuki Software.  It is *not* a Java properties file.  Differences
# include:
# - The \ character is not an escape character.
# - The # character is a comment character; to include it in a property
#   value, it must be inside double quotes or escaped by a second #.
# - Anything in %percent_signs% will be expanded from the environment.

# Configure the installation and data directories.  This is
# setting environment variables that can be expanded below.  (Because
# they are set.default.WHATEVER instead of set.WHATEVER, they will
# not override WHATEVER if already set in the environment.)
set.default.INSTALL_DIRECTORY=/opt/electriccloud/electriccommander
set.default.DATA_DIRECTORY=/opt/electriccloud/electriccommander
set.default.WEBAPPS_DIR_PATH=%INSTALL_DIRECTORY%/server/wars
set.default.COMMANDER_PORT=8000
set.default.COMMANDER_HTTPS_PORT=8443

# Set current working directory after wrapper executable starts
wrapper.working.dir=%DATA_DIRECTORY%

wrapper.pidfile=%DATA_DIRECTORY%/server/commander.pid

# Java Application
wrapper.java.command=%INSTALL_DIRECTORY%/jre/bin/java

# Java Main class.  This class must implement the WrapperListener interface
# or guarantee that the WrapperManager class is initialized.  Helper
# classes are provided to do this for you.  See the Integration section
# of the documentation for details.
wrapper.java.mainclass=com.electriccloud.util.AppStart

# Set the umask to make files only writable by owner on Linux
wrapper.java.umask=022

# Be lenient about sequence gaps
wrapper.ignore_sequence_gaps=true

# Java Classpath

wrapper.java.classpath.3=%INSTALL_DIRECTORY%/server/lib/commander-bootstrap.jar
wrapper.java.classpath.5=%INSTALL_DIRECTORY%/server/lib/*.jar

# Classpath on command line is too long for windows,
# so pass it in the environment
wrapper.java.classpath.use_environment=true

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=%INSTALL_DIRECTORY%/server/lib

# Java Additional Parameters
#
# These do not need to be consecutive or ordered.
# ****ElectricCommander reserves the 1-1000 integer range****
#     DO NOT use integers between 1-1000 for custom settings.

# Default location for log output
set.default.EC_LOG_ROOT=%DATA_DIRECTORY%/logs/commander.log

wrapper.java.additional.100=-server
wrapper.java.additional.110=-XX:+UseG1GC
wrapper.java.additional.120=-XX:+HeapDumpOnOutOfMemoryError
wrapper.java.additional.150=-XX:+AggressiveOpts
wrapper.java.additional.160=-XX:+UseFastAccessorMethods
wrapper.java.additional.170=-Dec.logRoot="%EC_LOG_ROOT%"
wrapper.java.additional.180=-Dcommander.logSetup=true
wrapper.java.additional.190=-Dcommander.logEvents=true
wrapper.java.additional.192=-Dcommander.appName=ElectricFlowServer
wrapper.java.additional.200=-Djava.net.preferIPv4Stack=true
wrapper.java.additional.210=-Djavax.net.ssl.sessionCacheSize=1000
wrapper.java.additional.211=-Djgroups.logging.log_factory_class=com.electriccloud.cluster.JGroupsLogFactory

# Path to the directory where temporary log config file is created.
# Note: be careful if you decide to change the property. If commander.removeOldTmpLogConfigs=true,
# then all the files matching 'logback-\d+.groovy' pattern in the directory will be removed,
# so this is not safe when the directory is shared between several processes.
wrapper.java.additional.205=-Dcommander.tmpLogConfigDir=conf/tmp
# If true, then the program looks for the old temporary log config files
# in commander.tmpLogConfigDir on start up and removes them. The old tmp log files
# can remain if the previous program runs were terminated abnormally.
# false, by default.
wrapper.java.additional.206=-Dcommander.removeOldTmpLogConfigs=false

# Ports
wrapper.java.additional.220=-DCOMMANDER_PORT=%COMMANDER_PORT%
wrapper.java.additional.230=-DCOMMANDER_HTTPS_PORT=%COMMANDER_HTTPS_PORT%

# SSL Properties
wrapper.java.additional.240=-DCOMMANDER_KEYSTORE_PASSWORD=abcdef
wrapper.java.additional.250=-DCOMMANDER_KEYSTORE=conf/keystore
wrapper.java.additional.260=-DCOMMANDER_CRL_FILE=conf/security/crl.pem

# Jetty arguments
wrapper.java.additional.270=-DWEBAPPS_DIR="%WEBAPPS_DIR_PATH%"
wrapper.java.additional.270.stripquotes=TRUE

# Logging properties
wrapper.java.additional.280=-Dorg.eclipse.jetty.util.log.class=org.eclipse.jetty.util.log.StdErrLog
wrapper.java.additional.290=-Dorg.eclipse.jetty.LEVEL=INFO

# SSL set the enabled client protocol list
wrapper.java.additional.310=-Djdk.tls.client.protocols="TLSv1,TLSv1.1,TLSv1.2"

# Avoid the wrapper's MBeanServer factory
wrapper.java.additional.330=-Dorg.tanukisoftware.wrapper.WrapperManager.mbean=false

#set server ip adress and host name
#wrapper.java.additional.350=-DCOMMANDER_BIND_IP=

# Debug arguments

#wrapper.java.additional.500=-ea
#wrapper.java.additional.510=-Xdebug
#wrapper.java.additional.520=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8019

# Clustered mode ZooKeeper/Exhibitor connection settings
#
# COMMANDER_ZK_CONNECTION is required for clustered mode; if you also
# installed Exhibitor, then set COMMANDER_EX_CONNECTION as well (Exhibitor
# port can't be changed from 80)

wrapper.java.additional.600=-DCOMMANDER_ZK_CONNECTION=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
#wrapper.java.additional.601=-DCOMMANDER_EX_CONNECTION=<HOST_EXHIBITOR1>,<HOST_EXHIBITOR2>,<HOST_EXHIBITOR3>
wrapper.java.additional.602=-Dcurator-dont-log-connection-problems=true
#wrapper.java.additional.603=-DCLUSTER_CERTIFICATE_SERVICE_USE_ZOOKEEPER=false

# These are for enabling proxy settings
# Set http.proxyHost to the IP Address of your proxy
# Set http.proxyPort to the port to proxy through
# Set http.noProxyHosts to a pipe delimited list of hosts 
# that should be reached directly, bypassing the proxy

#wrapper.java.additional.701=-Dhttp.proxyHost=<IP_ADDRESS_PROXY>
#wrapper.java.additional.702=-Dhttp.proxyPort=<PROXY_PORT>
#wrapper.java.additional.703=-Dhttp.noProxyHosts=localhost

# These are for enabling Commander to send data to a statsd server. 
# Only the hostname is required, the other options are included to show 
# the default values.
#wrapper.java.additional.800=-DCOMMANDER_STATSD_HOST=statsd-host-name
#wrapper.java.additional.801=-DCOMMANDER_STATSD_PORT=8125
#wrapper.java.additional.802=-DCOMMANDER_STATSD_PREFIX=commander
#wrapper.java.additional.803=-DCOMMANDER_STATSD_INCLUDE_HOSTNAME=true


# Overrides transfer protocol and port in REST documentation
# Transfer protocol should be set to http if we use ElectricFlow in appliances
# and port should be set to 8000
wrapper.java.additional.901=-DREST_DOC_TRANSFER_PROTOCOL=https
wrapper.java.additional.902=-DREST_DOC_PORT=8443

wrapper.java.additional.903=-DCHANGE_TRACKING_HARD_MAX_RECORDS=1000

wrapper.app.parameter.30=-jaxpmodule
wrapper.app.parameter.31=javax.xml.jaxp-provider

# Specify java heap size in percentage OR mb.

# Initial Java Heap Size (in %)
#wrapper.java.initmemory.percent=20

# Initial Java Heap Size (in mb)
wrapper.java.initmemory=2048

# Maximum Java Heap Size (in %)
#wrapper.java.maxmemory.percent=40

# Maximum Java Heap Size (in mb)
wrapper.java.maxmemory=4096

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=LPZM

# Log file to use for wrapper output logging.
wrapper.logfile=%DATA_DIRECTORY%/logs/commander-service.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPZM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=100m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=10

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=STATUS

#********************************************************************
# Wrapper Windows Properties
#********************************************************************
# Title to use when running as a console
wrapper.console.title=ElectricCommander Server

#********************************************************************
# Service Properties
#********************************************************************

# Name of the service
wrapper.name=CommanderServer

# Display name of the service
wrapper.displayname=ElectricFlow Server

# Description of the service
wrapper.description=ElectricFlow Server

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

# NT Service recovery options
wrapper.ntservice.recovery.reset=86400
wrapper.ntservice.recovery.1.delay=90
wrapper.ntservice.recovery.1.failure=RESTART
wrapper.ntservice.recovery.2.delay=90
wrapper.ntservice.recovery.2.failure=RESTART
wrapper.ntservice.recovery.3.delay=90
wrapper.ntservice.recovery.3.failure=RESTART

# If the JVM doesn't exit cleanly, try to get a thread dump
wrapper.request_thread_dump_on_failed_jvm_exit=true

# Set the JVM-wrapper heartbeat to reasonably large interval and timeout
wrapper.ping.interval=60
wrapper.ping.timeout=900

# Set the startup timeout.  Some machines with large sets of service
# take a while to get going.
wrapper.startup.timeout=300

# The shutdown timeout.
wrapper.shutdown.timeout=180

# The amount of time the server has to be up before it's considered a
# "successful" invocation.  If there are 5 or more failed invocations, the
# server will no longer startup.
wrapper.successful_invocation_time=30

# Java Service Wrapper License information
wrapper.license.type=DEV
wrapper.license.id=201604090000006
wrapper.license.licensee=Electric Cloud
wrapper.license.group=
wrapper.license.dev_application=ElectricCommander
wrapper.license.features=64bit
wrapper.license.upgrade_term.begin_date=2009-06-26
wrapper.license.upgrade_term.end_date=2017-06-26
wrapper.license.key.1=8e84-aef1-5152-2690
wrapper.license.key.2=f07b-ec38-0f5f-0791
wrapper.license.key.3=e5ef-eada-5698-ba7e
wrapper.license.key.4=03ca-34af-e44b-1a76
set.default.COMMANDER_IGNORE_SERVER_MISMATCH=1
set.default.COMMANDER_IGNORE_PASSKEY_MISMATCH=1

