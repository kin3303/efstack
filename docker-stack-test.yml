version: '3.4'

x-include:
  commanderserver: &commanderserver
    image: kin3303/commanderserver:${TAG}
    ports:
      - 8000
    volumes:
      - my-plugins:/opt/electriccloud/electriccommander/plugins
      - my-workspace:/opt/electriccloud/electriccommander/workspace
      - my-conf:/opt/electriccloud/electriccommander/conf
      - my-scripts:/tmp/scripts

  commanderapache: &commanderapache
    image: kin3303/commanderapache:${TAG}
    ports:
      - 80
    volumes:
      - my-plugins:/opt/electriccloud/electriccommander/plugins
      - my-workspace:/opt/electriccloud/electriccommander/workspace

  commanderagent: &commanderagent
    image: kin3303/commanderagent:${TAG}
    volumes:
      - my-plugins:/opt/electriccloud/electriccommander/plugins
      - my-workspace:/opt/electriccloud/electriccommander/workspace

  commanderrepository: &commanderrepository
    image: kin3303/commanderrepository:${TAG}
    volumes:
      - my-plugins:/opt/electriccloud/electriccommander/plugins
      - my-workspace:/opt/electriccloud/electriccommander/workspace
      - my-repository:/opt/electriccloud/electriccommander/repository-data

services:
  visualizer:
    image: dockersamples/visualizer:stable
    deploy:
      placement:
        constraints: [node.role == manager]
    ports:
      - "8081:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  haproxy:
    image: haproxy
    ports:
      - 80:80
      - 443:443
      - 8000:8000
      - 8443:8443
      - 1936:1936
    labels:
      - "interlock.ext.name=haproxy"
    depends_on:
        - interlock
    volumes:
      - my-haproxy:/usr/local/etc/haproxy/

  interlock:
    image: ehazlett/interlock:master
    command: run -c /etc/interlock/config.toml
    volumes:
        - "$PWD/data/interlock/config.toml:/etc/interlock/config.toml"
        - "$PWD/data/interlock/haproxy.cfg.template:/usr/local/etc/interlock/haproxy.cfg.template"
        - "/var/run/docker.sock:/var/run/docker.sock"

  zookeeper1:
    image: zookeeper
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888
    hostname: zookeeper1 

  zookeeper2:
    image: zookeeper
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888
    hostname: zookeeper2 

  zookeeper3:
    image: zookeeper
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888
    hostname: zookeeper3

  commanderserver:
    << : *commanderserver
    depends_on:
      - db
      - zookeeper1
      - haproxy
    environment:
      WAIT_HOSTS: db:3306
      WAIT_HOSTS_TIMEOUT: 180
    labels:
        - "interlock.hostname=test"
        - "interlock.domain=local"
    hostname: commanderserver

  commanderapache:
    <<: *commanderapache 
    depends_on:
      - commanderserver
    hostname: commanderapache
    depends_on:
      - haproxy
      
  localagent:
    <<: *commanderagent
    depends_on:
      - commanderserver
 
  repository:
    <<: *commanderrepository
 
  db:
    image: mysql:5.7
    volumes:
      - my-db:/var/lib/mysql
      - "$PWD/data/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf"
    environment:
      MYSQL_ROOT_PASSWORD: ecdb
      MYSQL_DATABASE: ecdb
      MYSQL_USER: ecdb
      MYSQL_PASSWORD: ecdb
    hostname: db

volumes:
  my-db:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/data/db-data/
  my-plugins:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/data/plugins/
  my-workspace:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/data/workspace/
  my-conf:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/data/conf/
  my-scripts:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/scripts/
  my-repository:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/data/repository-data/
  my-haproxy:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/data/haproxy/

networks:
  web:
    driver: overlay
